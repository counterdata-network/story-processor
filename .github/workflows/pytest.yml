name: ci-unit-test

# Trigger CI on pushes to `main` branch OR PRs raised to `main` branch OR manual triggers
on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - main
  pull_request:
    paths-ignore:
      - '**.md'
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

env:
  ENTITY_SERVER_URL: ${{ secrets.ENTITY_SERVER_URL }}
  FEMINICIDE_API_KEY: ${{ secrets.FEMINICIDE_API_KEY }}
  FEMINICIDE_API_URL: ${{ secrets.FEMINICIDE_API_URL }}
  MC_API_TOKEN: ${{ secrets.MC_API_TOKEN }}
  MC_LEGACY_API_KEY: ${{ secrets.MC_LEGACY_API_KEY }}
  NEWSCATCHER_API_KEY: ${{ secrets.NEWSCATCHER_API_KEY }}
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/story_processor_db

jobs:
  unit-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.8
        env:
          POSTGRES_DB: story_processor_db
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Database setup
        run: |
          alembic upgrade head
          ./scripts/download-models.sh

      - name: Test with pytest
        run: pytest
